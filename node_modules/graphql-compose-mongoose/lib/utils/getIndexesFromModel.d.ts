import type { Model } from 'mongoose';
export type getIndexesFromModelOpts = {
    extractCompound?: boolean;
    skipSpecificIndexes?: boolean;
};
export type IndexT = {
    [fieldName: string]: any;
};
export declare function getIndexesFromModel(mongooseModel: Model<any>, opts?: getIndexesFromModelOpts): IndexT[];
export declare function getUniqueIndexes(mongooseModel: Model<any>): IndexT[];
export type extendByReversedIndexesOpts = {
    reversedFirst?: boolean;
};
export declare function extendByReversedIndexes(indexes: IndexT[], opts?: extendByReversedIndexesOpts): IndexT[];
export declare function getIndexedFieldNamesForGraphQL(model: Model<any>): string[];
//# sourceMappingURL=getIndexesFromModel.d.ts.map